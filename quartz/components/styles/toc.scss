@use "../../styles/variables.scss" as *;

.toc {
  display: flex;
  flex-direction: column;
  height: 100%;
  max-height: calc(100vh - #{$topSpacing} * 2); // Account for top and bottom spacing
  position: sticky;
  top: $topSpacing;

  @media all and not ($mobile) {
    display: flex;
  }
}

button#toc {
  background-color: transparent;
  border: none;
  text-align: left;
  cursor: pointer;
  padding: 0;
  color: var(--dark);
  display: flex;
  align-items: center;
  position: sticky;
  top: 0;
  z-index: 1;
  background: var(--light);
  margin-bottom: 0.5rem;

  & h3 {
    font-size: 1rem;
    display: inline-block;
    margin: 0;
  }

  & .fold {
    margin-left: 0.5rem;
    transition: transform 0.3s ease;
    opacity: 0.8;
  }

  &.collapsed .fold {
    transform: rotateZ(-90deg);
  }
}

#toc-content {
  list-style: none;
  overflow: hidden;
  overflow-y: auto;
  max-height: calc(100vh - #{$topSpacing} * 3); // Account for header height
  transition:
    max-height 0.35s ease,
    visibility 0s linear 0s;
  position: relative;
  visibility: visible;
  scrollbar-width: thin;
  scrollbar-color: var(--gray) transparent;

  // Custom scrollbar styling for webkit browsers
  &::-webkit-scrollbar {
    width: 6px;
  }

  &::-webkit-scrollbar-track {
    background: transparent;
  }

  &::-webkit-scrollbar-thumb {
    background-color: var(--gray);
    border-radius: 3px;
  }

  &.collapsed {
    max-height: 0;
    transition:
      max-height 0.35s ease,
      visibility 0s linear 0.35s;
    visibility: hidden;
  }

  &.collapsed > .overflow::after {
    opacity: 0;
  }

  & ul {
    list-style: none;
    margin: 0.5rem 0;
    padding: 0;
    & > li > a {
      color: var(--dark);
      opacity: 0.35;
      transition:
        0.5s ease opacity,
        0.3s ease color;
      display: block;
      padding: 0.2rem 0;
      
      &.in-view {
        opacity: 0.75;
      }

      &:hover {
        opacity: 1;
      }
    }
  }

  > ul.overflow {
    max-height: none;
    width: 100%;
    padding-bottom: 1rem; // Add some bottom padding for better scrolling
  }

  @for $i from 0 through 6 {
    & .depth-#{$i} {
      padding-left: calc(1rem * #{$i});
    }
  }
}